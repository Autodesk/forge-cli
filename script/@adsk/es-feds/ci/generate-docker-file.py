##
## WARNING THIS FILE WAS GENERATED BY @adsk/es-feds. Do not modify.
## These files SHOULD be committed to git so jenkins can use them
##

## Generates a Dockerfile based on Dockerfile.template
## Return a path to stdout for the new Dockerfile
## Should put the dockerfile into temp

import os.path
import os
import json
import inspect
import tempfile
from string import Template

# loads the es-feds.json file and returns all files
# as docker COPY commands
# automatically provides destination relative to home directory
def initial_file_paths(home):
  es_feds_path = os.getcwd() + '/es-feds.json'
  json_data = open(es_feds_path)
  data = json.load(json_data)

  # get the dockerCopy files
  files_to_copy = data['plugins']['ci']['dockerCopy']

  def file_to_command(file):
    t = Template("COPY $source $home/$destination")
    return t.substitute(source=file, home=home, destination=file)

  commands = list(map(file_to_command, files_to_copy))

  return '\n'.join(commands)

def get_current_directory():
  return os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))

# set up substitution variables
home = '/workspace'
initial_files = initial_file_paths(home)
npm_auth_token = os.getenv('ES_FEDS_NPM_ARTIFACTORY_TOKEN', '')

# get the Dockerfile as a string
dockerfile_path = get_current_directory() + '/Dockerfile.template'

# create the new Dockerfile template
template = Template(open(dockerfile_path).read())
new = template.substitute(HOME=home, INITIAL_FILES=initial_files, ES_FEDS_NPM_ARTIFACTORY_TOKEN=npm_auth_token)

# write out the Dockerfile
path = tempfile.NamedTemporaryFile(delete=False).name

f = open(path, 'w')
f.write(new)
f.close()

print path